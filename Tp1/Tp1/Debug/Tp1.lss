
Tp1.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000162  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000010e  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000162  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000194  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000001d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000081d  00000000  00000000  00000204  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000006b0  00000000  00000000  00000a21  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000002fd  00000000  00000000  000010d1  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  000013d0  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c9  00000000  00000000  00001414  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000163  00000000  00000000  000017dd  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  00001940  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 77 00 	call	0xee	; 0xee <main>
  78:	0c 94 85 00 	jmp	0x10a	; 0x10a <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <_Z4Sec1v>:
#include <util/delay.h> // Retardos por software

/*Funciones de secuencias de leds*/
void Sec1(void)
{
	DDRD = 0xFF;
  80:	8f ef       	ldi	r24, 0xFF	; 255
  82:	8a b9       	out	0x0a, r24	; 10
	PORTD = 0b10101010;
  84:	8a ea       	ldi	r24, 0xAA	; 170
  86:	8b b9       	out	0x0b, r24	; 11
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  88:	2f ef       	ldi	r18, 0xFF	; 255
  8a:	81 ee       	ldi	r24, 0xE1	; 225
  8c:	94 e0       	ldi	r25, 0x04	; 4
  8e:	21 50       	subi	r18, 0x01	; 1
  90:	80 40       	sbci	r24, 0x00	; 0
  92:	90 40       	sbci	r25, 0x00	; 0
  94:	e1 f7       	brne	.-8      	; 0x8e <_Z4Sec1v+0xe>
  96:	00 c0       	rjmp	.+0      	; 0x98 <_Z4Sec1v+0x18>
  98:	00 00       	nop
	_delay_ms(100); // Delay de 100 ms
	PORTD = 0x00;
  9a:	1b b8       	out	0x0b, r1	; 11
	PORTD = 0b01010101;
  9c:	85 e5       	ldi	r24, 0x55	; 85
  9e:	8b b9       	out	0x0b, r24	; 11
  a0:	2f ef       	ldi	r18, 0xFF	; 255
  a2:	81 ee       	ldi	r24, 0xE1	; 225
  a4:	94 e0       	ldi	r25, 0x04	; 4
  a6:	21 50       	subi	r18, 0x01	; 1
  a8:	80 40       	sbci	r24, 0x00	; 0
  aa:	90 40       	sbci	r25, 0x00	; 0
  ac:	e1 f7       	brne	.-8      	; 0xa6 <_Z4Sec1v+0x26>
  ae:	00 c0       	rjmp	.+0      	; 0xb0 <_Z4Sec1v+0x30>
  b0:	00 00       	nop
	_delay_ms(100); // Delay de 100 ms
	PORTD = 0x00;
  b2:	1b b8       	out	0x0b, r1	; 11
  b4:	08 95       	ret

000000b6 <_Z4Sec2v>:
}
void Sec2(void)
{
	char aux = 0x01;
	DDRD = aux;
  b6:	81 e0       	ldi	r24, 0x01	; 1
  b8:	8a b9       	out	0x0a, r24	; 10
	int i=0;
	PORTD = 0x01;
  ba:	8b b9       	out	0x0b, r24	; 11
	for (i=0;i<8;i++){
  bc:	20 e0       	ldi	r18, 0x00	; 0
  be:	30 e0       	ldi	r19, 0x00	; 0
	_delay_ms(100); // Delay de 100 ms
	PORTD = 0x00;
}
void Sec2(void)
{
	char aux = 0x01;
  c0:	91 e0       	ldi	r25, 0x01	; 1
	DDRD = aux;
	int i=0;
	PORTD = 0x01;
	for (i=0;i<8;i++){
  c2:	28 30       	cpi	r18, 0x08	; 8
  c4:	31 05       	cpc	r19, r1
  c6:	94 f4       	brge	.+36     	; 0xec <_Z4Sec2v+0x36>
  c8:	4f ef       	ldi	r20, 0xFF	; 255
  ca:	51 ee       	ldi	r21, 0xE1	; 225
  cc:	84 e0       	ldi	r24, 0x04	; 4
  ce:	41 50       	subi	r20, 0x01	; 1
  d0:	50 40       	sbci	r21, 0x00	; 0
  d2:	80 40       	sbci	r24, 0x00	; 0
  d4:	e1 f7       	brne	.-8      	; 0xce <_Z4Sec2v+0x18>
  d6:	00 c0       	rjmp	.+0      	; 0xd8 <_Z4Sec2v+0x22>
  d8:	00 00       	nop
		_delay_ms(100); // Delay de 100 ms
		DDRD = 0x00;
  da:	1a b8       	out	0x0a, r1	; 10
		PORTD <<= 1;
  dc:	8b b1       	in	r24, 0x0b	; 11
  de:	88 0f       	add	r24, r24
  e0:	8b b9       	out	0x0b, r24	; 11
		aux <<= 1;
  e2:	99 0f       	add	r25, r25
		DDRD = aux;
  e4:	9a b9       	out	0x0a, r25	; 10
{
	char aux = 0x01;
	DDRD = aux;
	int i=0;
	PORTD = 0x01;
	for (i=0;i<8;i++){
  e6:	2f 5f       	subi	r18, 0xFF	; 255
  e8:	3f 4f       	sbci	r19, 0xFF	; 255
  ea:	eb cf       	rjmp	.-42     	; 0xc2 <_Z4Sec2v+0xc>
  ec:	08 95       	ret

000000ee <main>:
{
	/* Setup */
	/* Loop */
	while(1)
	{
		Sec1();
  ee:	0e 94 40 00 	call	0x80	; 0x80 <_Z4Sec1v>
  f2:	2f ef       	ldi	r18, 0xFF	; 255
  f4:	81 ee       	ldi	r24, 0xE1	; 225
  f6:	94 e0       	ldi	r25, 0x04	; 4
  f8:	21 50       	subi	r18, 0x01	; 1
  fa:	80 40       	sbci	r24, 0x00	; 0
  fc:	90 40       	sbci	r25, 0x00	; 0
  fe:	e1 f7       	brne	.-8      	; 0xf8 <main+0xa>
 100:	00 c0       	rjmp	.+0      	; 0x102 <main+0x14>
 102:	00 00       	nop
		_delay_ms(100);
		Sec2();
 104:	0e 94 5b 00 	call	0xb6	; 0xb6 <_Z4Sec2v>
 108:	f2 cf       	rjmp	.-28     	; 0xee <main>

0000010a <_exit>:
 10a:	f8 94       	cli

0000010c <__stop_program>:
 10c:	ff cf       	rjmp	.-2      	; 0x10c <__stop_program>
